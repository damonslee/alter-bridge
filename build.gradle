buildscript {
    ext {
        querydslPluginVersion = '1.0.10' // 플러그인 버전
    }
    repositories {
        maven { url "https://plugins.gradle.org/m2/" } // 플러그인 저장소
    }
    dependencies {
        classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:${querydslPluginVersion}") // querydsl 플러그인 의존성 등록
    }
}

plugins {
    id 'com.google.cloud.tools.jib' version '1.6.1'
    id 'org.asciidoctor.convert' version '1.5.3'
    id 'org.springframework.boot' version '2.1.7.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
}

group = 'com.yaboong'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile("com.querydsl:querydsl-jpa")
    compile("com.querydsl:querydsl-apt")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.apache.commons:commons-lang3:3.1")
    compile("com.amazonaws:aws-java-sdk-s3:1.11.133")
    compile("org.modelmapper:modelmapper:2.3.1")
    compile("org.springframework.boot:spring-boot-starter-hateoas")
    compile("org.projectlombok:lombok")

    developmentOnly("org.springframework.boot:spring-boot-devtools")

    runtimeOnly("com.h2database:h2")
    runtimeOnly("mysql:mysql-connector-java")

    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("pl.pragmatists:JUnitParams:1.1.1")
    testCompile("org.springframework.restdocs:spring-restdocs-mockmvc")

    asciidoctor("org.springframework.restdocs:spring-restdocs-asciidoctor")
}


apply plugin: "com.ewerk.gradle.plugins.querydsl" // Plugin 적용

def querydslSrcDir = 'src/main/generated' // QClass 생성 위치
querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslSrcDir
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', querydslSrcDir]
        }
    }
}

// asciidoctor
ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    outputs.dir snippetsDir
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

task copyDocument(type: Copy) {
    dependsOn asciidoctor

    from file("build/asciidoc/html5/")
    into file("src/main/resources/static/docs")
}

build {
    dependsOn copyDocument
}

bootJar {
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.10.2'
}

jib {
    to {
        image = 'yaboong/alter-bridge'
        credHelper = 'osxkeychain'
    }
}